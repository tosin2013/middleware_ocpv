- name: Verify Client ID and Secret provided 
  ansible.builtin.assert:
    that:
      - redhat_serviceaccount_client_id is defined
      - redhat_serviceaccount_client_id | length > 0
      - redhat_serviceaccount_client_secret is defined
      - redhat_serviceaccount_client_secret | length > 0
    fail_msg: "'redhat_serviceaccount_client_id' and 'redhat_serviceaccount_client_secret' are not defined"
    quiet: true

- name: Verify RHN Credentials Provided 
  ansible.builtin.assert:
    that:
      - redhat_portal_username is defined
      - redhat_portal_username | length > 0
      - redhat_portal_password is defined
      - redhat_portal_password | length > 0
    fail_msg: "'redhat_portal_username' and 'redhat_portal_password' are not defined"
    quiet: true

- name: Create Download Archive Directory
  ansible.builtin.file:
    state: directory
    path: "{{ eap_archive_dir }}"
    mode: 0644

- name: Search EAP Products
  middleware_automation.common.product_search:
    client_id: "{{ redhat_serviceaccount_client_id }}"
    client_secret: "{{ redhat_serviceaccount_client_secret }}"
    product_category: "{{ eap_product_category }}"
    product_version: "{{ eap_product_version }}"
    product_type: "{{ eap_product_type }}"
  register: deploy_collection_product_results

- name: Filter Products
  ansible.builtin.set_fact:
    deploy_collection_filtered_products: "{{ deploy_collection_product_results.results | selectattr('file_path', 'search', eap_product_filename) | list }}"

- name: Fail if 1 single product is in the filtered list
  ansible.builtin.fail:
    msg: "Unable to locate single product to download: {{ deploy_collection_filtered_products | length }} products found"
  when: deploy_collection_filtered_products | length != 1

- name: Download EAP
  become: false
  middleware_automation.common.product_download:
    client_id: "{{ redhat_serviceaccount_client_id }}"
    client_secret: "{{ redhat_serviceaccount_client_secret }}"
    product_id: "{{ (deploy_collection_filtered_products | first).id }}"
    dest: "{{ eap_download_location }}"

- name: Check RHN subscription status
  become: false
  ansible.builtin.command: subscription-manager status
  register: sm_result
  ignore_errors: True
  changed_when: False

- name: Subscribe to RHN
  become: true
  ansible.builtin.command: subscription-manager register --username="{{ redhat_portal_username }}" --password="{{ redhat_portal_password }}" --force
  no_log: true
  when: sm_result.rc != 0
  changed_when: True

- name: Install EAP
  ansible.builtin.include_role:
    name: redhat.eap.eap_install

- name: "Set up EAP"
  ansible.builtin.include_role:
    name: redhat.eap.eap_systemd

- name: "Wait for each instance HTTP ports to become available."
  ansible.builtin.wait_for:
    port: 8080

- name: "Ensures webapp has been retrieved from {{ app.url }}"
  become: true
  ansible.builtin.get_url:
    url: "{{ app.url }}"
    dest: "{{ eap_archive_dir }}/{{ app.name }}"
    mode: 0644

- name: "Deploy webapp"
  ansible.builtin.include_role:
    name: redhat.eap.eap_utils
    tasks_from: jboss_cli.yml
    apply:
      become: true
  vars:
    jboss_cli_query: "'deploy --force {{ eap_archive_dir }}/{{ app.name }}'" # noqa: var-naming[no-role-prefix]
